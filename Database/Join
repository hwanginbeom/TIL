--18. JOIN
--# 천재지변으로 인해 일부 데이터가 유실되었습니다. 입양을 간 기록은 있는데, 보호소에 들어온 기록이 없는 동물의 ID와 이름을 ID 순으로 조회하는 SQL문을 작성해주세요.

SELECT OUTS.ANIMAL_ID, OUTS.NAME #
FROM ANIMAL_OUTS OUTS             #LEFT OUTER JOIN 과 INNER JOIN을 많이 사용한다. 이건 왼쪽 기준에 맞추기 때문에 WHERE 조건에
LEFT OUTER JOIN ANIMAL_INS INS                #없는 것들은 NULL 값이 나온다.
ON OUTS.ANIMAL_ID = INS.ANIMAL_ID     # ON 으로 연결한다 FROM 부분이 왼쪽에 와야 된다.
WHERE INS.ANIMAL_ID is NULL        #WHERE 로 없는 애들을 찾는다.
ORDER BY OUTS.ANIMAL_ID


--19. JOIN
--# 관리자의 실수로 일부 동물의 입양일이 잘못 입력되었습니다. 보호 시작일보다 입양일이 더 빠른 동물의 아이디와 이름을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일이 빠른 순으로 조회해야합니다.

SELECT INS.ANIMAL_ID, INS.NAME
FROM ANIMAL_INS INS
LEFT OUTER JOIN ANIMAL_OUTS OUTS
ON OUTS.ANIMAL_ID = INS.ANIMAL_ID
WHERE OUTS.DATETIME < INS.DATETIME
ORDER BY INS.DATETIME

--20.JOIN + LIMIT
--# 아직 입양을 못 간 동물 중, 가장 오래 보호소에 있었던 동물 3마리의 이름과 보호 시작일을 조회하는 SQL문을 작성해주세요. 이때 결과는 보호 시작일 순으로 조회해야 합니다

SELECT INS.NAME, INS.DATETIME
FROM ANIMAL_INS INS
LEFT OUTER JOIN ANIMAL_OUTS OUTS
ON OUTS.ANIMAL_ID = INS.ANIMAL_ID
WHERE OUTS.DATETIME IS NULL
ORDER BY INS.DATETIME LIMIT 3

--21.JOIN + LIKE
--#보호소에서 중성화 수술을 거친 동물 정보를 알아보려 합니다. 보호소에 들어올 당시에는 중성화되지 않았지만, 보호소를 나갈 당시에는 중성화된 동물의 아이디와 생물 종, 이름을 조회하는 아이디 순으로 조회하는 SQL 문을 작성해주세요.


SELECT ANIMAL_OUTS.ANIMAL_ID, ANIMAL_OUTS.ANIMAL_TYPE, ANIMAL_OUTS.NAME
FROM ANIMAL_OUTS
LEFT JOIN ANIMAL_INS
ON ANIMAL_OUTS.ANIMAL_ID=ANIMAL_INS.ANIMAL_ID
WHERE ANIMAL_INS.SEX_UPON_INTAKE LIKE 'Intact%'  # 중성화 되어 있지 않은 경우
AND (ANIMAL_OUTS.SEX_UPON_OUTCOME LIKE 'Spayed%'  # A 또는 B 경우 둘다 중성화다
OR ANIMAL_OUTS.SEX_UPON_OUTCOME LIKE 'Neutered%') # LIKE 'ABC%' 로 뒤에는 모가 나오든 상관없게한다.
